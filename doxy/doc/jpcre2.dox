//Documentation

///@struct jpcre2::select
///struct to select the character type and PCRE2_CODE_UNIT_WIDTH as the code unit width. 
///
///If you define PCRE2_CODE_UNIT_WIDTH to be 8, 16 or 32, the templated struct jpcre2::select will
///inherit one of the original struct from jpcre2::select8, jpcre2::select16 or jpcre2::select32 respectively and have complete access
///to the public API.
///
///Implementation of jpcre2::select8, jpcre2::select16 or jpcre2::select32 are the same with same types of members, typdefs etc ...
///
///Usage: `jpcre2::select<Char_T>`.
///
///The character type (`Char_T`) must be in accordance with the definition of PCRE2_CODE_UNIT_WIDTH.
///If it doesn't match with the character type, then the behavior is undefined. If the macro `JPCRE2_ENABLE_CODE_UNIT_VALIDATION` is defined
///, then such behavior will cause an assertion failure and immediate termination of the program.
///
///When working with a single code unit width, jpcre2::select can be used in place of jpcre2::select8 for 8bit,
/// or in place of jpcre2::select16 for 16bit, or in place of jpcre2::select32 for 32bit.
///
///When working with multiple code unit width, jpcre2::select family of strcuts must be called with their original names.
///@tparam Char_T Character type (`char`, `wchar_t`, `char16_t`, `char32_t`).
///@see jpcre2::select8
///@see jpcre2::select16
///@see jpcre2::select32


///@struct jpcre2::select8
///struct to select 8 bit code unit width and the character type.
///
///If `PCRE2_CODE_UNIT_WIDTH 8` is defined you can access it without the suffix (8) i.e `jpcre2::select<Char_T>`.
///
///Usage: `jpcre2::select8<Char_T>`.
///
///The character type (`Char_T`) must be in accordance with the definition of PCRE2_CODE_UNIT_WIDTH.
///If it doesn't match with the character type, then the behavior is undefined. If the macro `JPCRE2_ENABLE_CODE_UNIT_VALIDATION` is defined
///, then such behavior will cause an assertion failure and immediate termination of the program.
///@tparam Char_T Character type (`char`, `wchar_t`, `char16_t`, `char32_t`).
///@see jpcre2::select16
///@see jpcre2::select32

///@struct jpcre2::select16
///struct to select 16 bit code unit width and the character type.
///
///If `PCRE2_CODE_UNIT_WIDTH 16` is defined you can access it without the suffix (16) i.e `jpcre2::select<Char_T>`.
///
///Usage: `jpcre2::select16<Char_T>`.
///
///The character type (`Char_T`) must be in accordance with the definition of PCRE2_CODE_UNIT_WIDTH.
///If it doesn't match with the character type, then the behavior is undefined. If the macro `JPCRE2_ENABLE_CODE_UNIT_VALIDATION` is defined
///, then such behavior will cause an assertion failure and immediate termination of the program.
///@tparam Char_T Character type (`char`, `wchar_t`, `char16_t`, `char32_t`).
///@see jpcre2::select8
///@see jpcre2::select32

///@struct jpcre2::select32
///struct to select 32 bit code unit width and the character type.
///
///If `PCRE2_CODE_UNIT_WIDTH 32` is defined you can access it without the suffix (32) i.e `jpcre2::select<Char_T>`.
///
///Usage: `jpcre2::select32<Char_T>`.
///
///The character type (`Char_T`) must be in accordance with the definition of PCRE2_CODE_UNIT_WIDTH.
///If it doesn't match with the character type, then the behavior is undefined. If the macro `JPCRE2_ENABLE_CODE_UNIT_VALIDATION` is defined
///, then such behavior will cause an assertion failure and immediate termination of the program.
///@tparam Char_T Character type (`char`, `wchar_t`, `char16_t`, `char32_t`).
///@see jpcre2::select16
///@see jpcre2::select8

